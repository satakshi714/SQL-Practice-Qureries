-----------------------------------------Answer 1--------------------------------------
create table employee(
emp_id int primary key,
emp_name varchar(50),
department varchar(50),
salary int
);

create table bonus(
emp_id int,
bonus int,
foreign key (emp_id) references employee(emp_id));

INSERT INTO employee (emp_id, emp_name, department, salary) VALUES
(1, 'Alice', 'HR', 5000),
(2, 'Bob', 'Sales', 7000),
(3, 'Charlie', 'Sales', 6000),
(4, 'David', 'HR', 5500),
(5, 'Eve', 'IT', 9000),
(6, 'Frank', 'Marketing', 6200),
(7, 'Grace', 'IT', 8800),
(8, 'Hank', 'Finance', 7700),
(9, 'Ivy', 'Marketing', 6600),
(10, 'Jack', 'Finance', 7100);

INSERT INTO bonus (emp_id, bonus) VALUES
(1, 500),
(2, 1000),
(3, 800),
(4, NULL),
(5, 1200),
(6, 900),
(7, NULL),
(8, 1100),
(9, 600),
(10, 750);

select * from employee;
select * from bonus;

update bonus set bonus = 0 where bonus = NULL;

select employee.emp_name,employee.department, employee.salary+ifnull(bonus.bonus,0) as total_compensation from employee
left join bonus on employee.emp_id = bonus.emp_id;


-----------------------------------------Answer 2--------------------------------------

create table employee(
emp_id int primary key,
name varchar(50),
salary int,
dep_id int);

insert into employee values(1, "Alice", 30000, 101);
insert into employee values(2, "Bob", 40000, 102);
insert into employee values(3, "Charlie", 50000, 103);
insert into employee values(4, "David", 45000, 101);
insert into employee values(5, "Eve", 65000, 104);
insert into employee values(6, "Florence", 55000, 103);
insert into employee values(7, "Gwen", 35000, 101);
insert into employee values(8, "Harry", 43000, 102);
insert into employee values(9, "Ingrid", 45000, 103);
insert into employee values(10, "Jack", 37000, 101);
insert into employee values(11, "Keith", 60000, 104);
insert into employee values(12, "Lawrence", 59000, 103);
select * from employee;

select emp_id, name, salary, dep_id from employee e 
where salary > (select avg(salary) from employee where dep_id = e.dep_id);


-----------------------------------------Answer 3--------------------------------------


create table sales(
sale_id int primary key,
emp_id int,
sale_amt decimal(10,2),
sale_date date);

INSERT INTO sales VALUES 
(1, 101, 5000.00, '2025-07-01'), 
(2, 102, 3200.50, '2025-07-02'),
(3, 101, 1500.75, '2025-07-03'),
(4, 103, 7800.20, '2025-07-04'),
(5, 104, 2450.00, '2025-07-05'), 
(6, 102, 3300.10, '2025-07-06'),
(7, 105, 9200.00, '2025-07-07'),
(8, 104, 1100.30, '2025-07-08'), 
(9, 101, 600.00, '2025-07-09'),
(10, 103, 3100.45, '2025-07-10');

select * from sales;

SELECT 
    emp_id, 
    sale_id, 
    sale_amt, 
    total_sales
FROM (
    SELECT 
        sale_id, 
        emp_id, 
        sale_amt,
        SUM(sale_amt) OVER (PARTITION BY emp_id) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY emp_id ORDER BY sale_amt DESC) AS rn
    FROM sales 
) AS ranked_sales
WHERE rn <= 1;






